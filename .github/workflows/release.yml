name: Release

on: workflow_dispatch

env:
  AWS_REGION: us-east-2
  DOCKER_BUILDKIT: 1
  DOCKER_CACHE_PATH: ${{ github.workspace }}/tmp/docker-cache
  NOTIFICATION_FIELDS: >
    [
      {
        title: 'Repository',
        value: `${process.env.AS_REPO}`,
        short: true
      },
      {
        title: 'Environment',
        value: `${process.env.GITHUB_REF_SLUG}`,
        short: true
      },
      {
        title: 'Author',
        value: `${process.env.AS_AUTHOR}`,
        short: true
      },
      {
        title: 'Commit',
        value: `${process.env.AS_COMMIT}`,
        short: true
      },
      {
        title: 'Job',
        value: `${process.env.AS_JOB}`,
        short: true
      },
      {
        title: 'Duration',
        value: `${process.env.AS_TOOK}`,
        short: true
      },
      {
        title: 'Commit Message',
        value: `${process.env.AS_MESSAGE}`,
        short: false
      }
    ]

jobs:
  release:
    name: Release
    runs-on: ubuntu-18.04
    needs: []
    steps:
      - name: Checkout
        # A GitHub Action to checkout a repository.
        # https://github.com/actions/checkout
        uses: actions/checkout@v2
        with:
           token: ${{ secrets.GITHUB_TOKEN }}

      - name: Inject slug/short variables
        # A GitHub Action to expose the slug values of some GitHub ENV variables
        # https://github.com/rlespinasse/github-slug-action
        uses: rlespinasse/github-slug-action@v3.x

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEPLOYER_PRODUCTION_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.DEPLOYER_PRODUCTION_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Create release
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: scribd/semantic-release
        run: |
          docker pull $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker run --rm \
            -v ${{ github.workspace }}:/src \
            -w /src \
            -e CI=true \
            -e GITHUB_ACTIONS=true \
            -e GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} \
            -e GITHUB_REPOSITORY=${{ github.repository }} \
            -e GITHUB_WORKSPACE=${{ github.workspace }} \
            -e GITHUB_SHA=${{ github.sha }} \
            -e GITHUB_REF=${{ github.ref }} \
            $ECR_REGISTRY/$ECR_REPOSITORY:latest --publish

      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}

      - name: Set status emoji
        id: release-status
        if: always()
        run: |
          if [ "${{ job.status }}" = "success" ]; then
              echo "::set-output name=emoji::large_green_square"
              echo "::set-output name=color::good"
          elif [ "${{ job.status }}" = "failure" ]; then
              echo "::set-output name=emoji::large_red_square"
              echo "::set-output name=color::danger"
          else
              echo "::set-output name=emoji::large_orange_square"
              echo "::set-output name=color::warning"
          fi

      - name: Send Slack notification
        if: always()
        uses: 8398a7/action-slack@v3.9.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        with:
          author_name: "GitHub on ${{ github.repository }}"
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          status: custom
          job_name: 'Release'
          custom_payload: |
            {
              text: `:${{ steps.release-status.outputs.emoji }}: *Workflow ${ process.env.AS_WORKFLOW } ${{ job.status }}*`,
              attachments: [
                {
                  color: '${{ steps.release-status.outputs.color }}',
                  fields: ${{ env.NOTIFICATION_FIELDS }}
                }
              ]
            }
