name: Release

on: workflow_dispatch

env:
  AWS_REGION: us-east-2
  DOCKER_BUILDKIT: 1
  DOCKER_CACHE_PATH: ${{ github.workspace }}/tmp/docker-cache
  NOTIFICATION_FIELDS: >
    [
      {
        "title": "Repository",
        "value": "<https://github.com/${{ github.repository }}|${{ github.repository }}>",
        "short": true
      },
      {
        "title": "Environment",
        "value": "${{ github.ref_name == 'main' && 'production' || github.ref_name }}",
        "short": true
      },
      {
        "title": "Author",
        "value": "<https://github.com/${{ github.event.sender.login }}|${{ github.event.sender.login }}>",
        "short": true
      },
      {
        "title": "Job",
        "value": "${{ github.job }}",
        "short": true
      },
      {
        "title": "Tag Message",
        "value": "%s",
        "short": false
      }
    ]

jobs:
  release:
    name: Release
    runs-on: ubuntu-20.04
    needs: []
    steps:
      - name: Checkout
        # A GitHub Action to checkout a repository.
        # https://github.com/actions/checkout
        uses: actions/checkout@v2
        with:
           token: ${{ secrets.GITHUB_TOKEN }}
           persist-credentials: false

      - name: Inject slug/short variables
        # A GitHub Action to expose the slug values of some GitHub ENV variables
        # https://github.com/rlespinasse/github-slug-action
        uses: rlespinasse/github-slug-action@v3.x

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEPLOYER_PRODUCTION_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.DEPLOYER_PRODUCTION_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Create release
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: scribd/semantic-release
        run: |
          docker pull $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker run --rm \
            -v ${{ github.workspace }}:/src \
            -w /src \
            -e CI=true \
            -e GITHUB_ACTIONS=true \
            -e GITHUB_TOKEN=${{ secrets.SCRIBD_GITHUB_RELEASE_TOKEN }} \
            -e GITHUB_REPOSITORY=${{ github.repository }} \
            -e GITHUB_WORKSPACE=${{ github.workspace }} \
            -e GITHUB_SHA=${{ github.sha }} \
            -e GITHUB_REF=${{ github.ref }} \
            $ECR_REGISTRY/$ECR_REPOSITORY:latest --publish

      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}

      - name: Set status emoji
        id: release-status
        if: always()
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "emoji=large_green_square" >> $GITHUB_OUTPUT
            echo "color=good" >> $GITHUB_OUTPUT
          elif [ "${{ job.status }}" = "failure" ]; then
            echo "emoji=large_red_square" >> $GITHUB_OUTPUT
            echo "color=danger" >> $GITHUB_OUTPUT
          else
            echo "emoji=large_orange_square" >> $GITHUB_OUTPUT
            echo "color=warning" >> $GITHUB_OUTPUT
          fi

      - name: Output release version
        id: output-release-version
        run: |
          echo "::set-output name=release-version::$(git rev-list --tags --max-count=1 | xargs git describe --tags | cut -c2-)"

      - name: Set commit message
        if: always()
        run: |
          message="<https://github.com/scribd/go-sdk/releases/tag/${{ steps.output-release-version.outputs.release-version }}|Released version ${{ steps.output-release-version.outputs.release-version }}>"
          echo NOTIFICATION_FIELDS=$(printf '${{ env.NOTIFICATION_FIELDS }}' "$message") >> $GITHUB_ENV

      - name: Send Slack notification
        if: always()
        uses: slackapi/slack-github-action@v1.23.0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SCRIBD_SLACK_GENERIC_TOKEN }}
        with:
          channel-id: service-foundations-release
          payload: |
            {
              "text": ":${{ steps.release-status.outputs.emoji }}: *Workflow <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/|${{ github.workflow }}> ${{ job.status }}*",
              "attachments": [
                {
                  "color": "${{ steps.release-status.outputs.color }}",
                  "fields": ${{ env.NOTIFICATION_FIELDS }}
                }
              ]
            }
